// GoogleSheetsIntegration.js
import { useState, useEffect } from "react";
import { GoogleSpreadsheet } from "google-spreadsheet";
import { JWT } from "google-auth-library";

const GoogleSheetsIntegration = () => {
  const [sheetData, setSheetData] = useState([]);

  useEffect(() => {
    const fetchDataFromGoogleSheets = async () => {
      try {
        const serviceAccountAuth = new JWT({
          // env var values here are copied from service account credentials generated by google
          // see "Authentication" section in docs for more info
          email: "ruchika.sreedhar2@gmail.com",
          key: "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",
          scopes: ["https://www.googleapis.com/auth/spreadsheets"],
        });
        const doc = new GoogleSpreadsheet("697935424", serviceAccountAuth);
        // Load the credentials from the downloaded JSON key file
        // doc.useServiceAccountAuth({});
        // await doc.useServiceAccountAuth({
        //   client_email: "ruchika.sreedhar2@gmail.com",
        //   private_key: "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",
        // });

        // Load document properties and worksheets
        await doc.loadInfo();
        console.log(doc.title);
        // Access the desired sheet by its title
        const sheet = doc.sheetsByIndex[0]; // or use `doc.sheetsById[id]` or `doc.sheetsByTitle[title]`
        console.log(sheet.title);
        console.log(sheet.rowCount);
        // const sheet = doc.sheetsByTitle["Sheet1"];

        // Get all rows as objects
        const rows = await sheet.getRows();

        // Process data
        const data = rows.map((row) => row._rawData); // Modify based on your sheet structure

        setSheetData(data);
      } catch (error) {
        console.error("Error fetching data from Google Sheets:", error);
      }
    };

    fetchDataFromGoogleSheets();
  }, []); // Empty dependency array ensures the effect runs only once on mount

  return (
    <div>
      <h2>Data from Google Sheets</h2>
      <ul>
        {sheetData.map((item, index) => (
          <li key={index}>{JSON.stringify(item)}</li>
        ))}
      </ul>
    </div>
  );
};

export default GoogleSheetsIntegration;
